{"version":3,"sources":["webpack:///./src/components/share-tooltip/tooltip-helpers.js","webpack:///./src/components/share-tooltip/share-tooltip.js","webpack:///./src/utils/useSelection.js","webpack:///./src/templates/blog-post.js"],"names":["createShareLink","type","title","description","text","pageUrl","TooltipContainer","styled","div","LinksContainer","props","location","top","left","RotatedSquare","ShareTooltip","postTitle","postDescription","useState","document","documentElement","scrollTop","body","position","setPosition","querySelector","setBody","selected","setSelected","useEffect","onselectionchange","selection","getSelection","toString","createRange","useSelection","setLocation","window","href","setPageUrl","length","rect","getRangeAt","getBoundingClientRect","width","shareLink","e","preventDefault","url","currentTarget","open","className","onClick","style","marginTop","color","aria-label","role","pageQuery","BlogPostTemplate","data","pageContext","post","markdownRemark","siteTitle","site","siteMetadata","previous","next","frontmatter","excerpt","rhythm","marginBottom","scale","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel"],"mappings":"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","file":"component---src-templates-blog-post-js-3bc186cf588394314018.js","sourcesContent":["/*!\n* license: MIT\n* Heavily inspired by, Share Selected Text\n* url: https://github.com/VincentLoy/share-selected-text\n* author: Vincent Loy <vincent.loy1@gmail.com>\n* adapted for personal use by: Luis H. Ball Jr. <luisball@hey.com>\n*/\n\nimport styled from 'styled-components'\n// const LIGHT_BLUE = '#6CB4EE'\n// const CYAN = '#00FFFF';\nconst DALLAS_BLUE = '#041E42';\nconst DALLAS_BLUE_TRANSPARENT = '#041e4254';\n\n// helpers\n// accepts string designating link type, returns link url\nexport const createShareLink = (type, title, description, text, pageUrl) => {\n    if (!text) { return '' }\n\n    const twitterUrl = `https://twitter.com/intent/tweet?url=${pageUrl}&text=${description}:%0\"${text}\"&via=@luishbjr1`;\n    const emailUrl = `mailto:name@email.com?subject=${title}&body=\"${text}\"%0D%0A...%0D%0A${description}, ${pageUrl}`;\n    const shareUrl =  type === 'twitter' ? twitterUrl : emailUrl;\n\n    return shareUrl;\n};\n\n// styled components\nexport const TooltipContainer = styled.div`\n    position: absolute;\n    top: 0px;\n    left: 0px;\n`;\n\nexport const LinksContainer = styled.div`\n    top: ${props => props.location.top + 'px'};\n    left: ${props => props.location.left + 'px'};\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n    width: 120px;\n    height: 35px;\n    background-color: ${DALLAS_BLUE};\n    box-shadow: -1px 1px 4px 1px ${DALLAS_BLUE_TRANSPARENT};\n    border-radius: 4px;\n    padding-left: 5px;\n    padding-right: 5px;\n`\n\nexport const RotatedSquare = styled.div`\n    background: ${DALLAS_BLUE};\n    transform: rotate(45deg);\n    width: 25px;\n    height: 25px;\n    position: absolute;\n    top: ${props => props.location.top + 15 + 'px'};\n    left: ${props => props.location.left + 50 + 'px'};\n`\n","/*!\n* ShareTooltip Component\n* license: MIT\n* author: Luis H. Ball Jr. <luisball@hey.com>\n* heavily inspired by: Share Selected Text, url: https://github.com/VincentLoy/share-selected-text\n*/\n\nimport React, { useState, useEffect } from 'react'\n\nimport { useSelection } from \"../../utils/useSelection\"\nimport {\n    createShareLink,\n    TooltipContainer,\n    LinksContainer,\n    RotatedSquare } from \"./tooltip-helpers\"\n\n// constants\nconst TOOLTIP_HEIGHT = 35;\nconst FACTOR = 1.33;\n\nconst ShareTooltip = ({ postTitle, postDescription }) => {\n    const [position, setPosition] = useState(document.documentElement.scrollTop || document.body.scrollTop);\n    const [body, setBody] = useState(document.querySelector('body'));\n    const selected = useSelection();\n    const [location, setLocation] = useState({top: '', left: ''})\n    const [pageUrl, setPageUrl] = useState(window.location.href)\n\n    useEffect(() => {\n        setPosition(document.documentElement.scrollTop || document.body.scrollTop);\n        setBody(document.querySelector('body'));\n        setPageUrl(window.location.href);\n    }, [])\n\n    // whenever selection changes calculate new top & left offsets\n    useEffect(() => {\n        if (selected && selected.text.length) {\n            let range = selected.selection.getRangeAt(0);\n            let rect = range.getBoundingClientRect();\n            setLocation({\n                top: position + rect.top - TOOLTIP_HEIGHT * FACTOR,\n                left: rect.left + rect.width / 2 - body.getBoundingClientRect().width / 12,\n            })\n        } else {\n            // if no current selection do not update location\n            return;\n        }\n    }, [body, position, selected])\n\n    // if no current selection render nothing\n    if (!selected || !selected.text || !selected.text.length || selected.text.length < 1) {\n        return null;\n    }\n\n    // open share window on icon click\n    const shareLink = (e) => {\n        e.preventDefault();\n        const windowFeatures = 'status=no,menubar=no,location=no,scrollbars=no,width=720,height=540';\n        const url = e.currentTarget.href;\n        window.open(url, 'Share this post', windowFeatures);\n    }\n\n    return (\n        <TooltipContainer className={`share-tooltip-container ${selected ? '' : 'hidden'}`}>\n            <RotatedSquare location={location}/>\n            <LinksContainer location={location}>\n                <a href={createShareLink('twitter', postTitle, postDescription, selected.text, pageUrl)} onClick={(e) => shareLink(e)}>\n                    <p style={{ marginTop: 10, color: 'white' }}>\n                        <span className=\"emoji\" aria-label=\"twitter\" role=\"img\">üê¶</span>\n                    </p>\n                </a>\n                <a href={createShareLink('email', postTitle, postDescription, selected.text, pageUrl)} onClick={(e) => shareLink(e)}>\n                    <p style={{ marginTop: 10, color: 'white' }}>\n                        <span className=\"emoji\" aria-label=\"email\" role=\"img\">‚úâÔ∏è</span>\n                    </p>\n                </a>\n            </LinksContainer>\n        </TooltipContainer>\n    )\n}\n\nexport default ShareTooltip\n","/**\n * license: MIT\n * author: Luis H. Ball Jr. <luisball@hey.com>\n * \n * React hook that returns selected text and Selection object.\n * Note: the selection object does not log but is present.\n * \n * For more on how this works, read the Window.getSelection() documentation:\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/getSelection\n */\n\nimport { useState, useEffect } from 'react';\n\nexport const useSelection = () => {\n    const [selected, setSelected] = useState()\n\n    useEffect(() => {\n        document.onselectionchange = () => {\n            let selection;\n            let text = '';\n\n            if (document.getSelection) {\n                selection = document.getSelection();\n                text = selection.toString();\n            } else if (document.selection && document.selection.type !== 'Control') {\n                selection = document.selection.createRange();\n                text = selection.text;\n            }\n            setSelected({ text, selection })\n        };\n    }, [])\n\n    return selected;\n}","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\nimport ShareTooltip from \"../components/share-tooltip/share-tooltip\";\n\nimport './blog-post.css'\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          {/* <p>{JSON.stringify(selected)}</p> */}\n          <ShareTooltip postTitle={post.frontmatter.title} postDescription={post.frontmatter.description || post.excerpt}/>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ‚Üê {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} ‚Üí\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}