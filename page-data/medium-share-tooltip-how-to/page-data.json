{"componentChunkName":"component---src-templates-blog-post-js","path":"/medium-share-tooltip-how-to/","result":{"data":{"site":{"siteMetadata":{"title":"Luis Ball"}},"markdownRemark":{"id":"8f70d220-cdfc-5521-8c53-1a7ab814fbc9","excerpt":"This post is a WIP We‚Äôve previously covered how to create a useSelection hook that stores the currently selected text and Styling selected text with CSS in this‚Ä¶","html":"<blockquote>\n<p><strong>This post is a WIP</strong></p>\n</blockquote>\n<blockquote>\n<p>We‚Äôve previously covered how to <a href=\"https://luisball.com/styling-document-selection/\">create a useSelection hook that stores the currently selected text</a> and <a href=\"https://luisball.com/styling-document-selection-part-2/\">Styling selected text with CSS</a> in this series. If you haven‚Äôt taken a look, I recommend you do so now as we‚Äôll be building off of those blog posts.</p>\n</blockquote>\n<p>For part 3 of this <strong>Browser Selection API</strong> series, we‚Äôre going to build our own <a href=\"https://dribbble.com/shots/1330226-Medium-Style-Tooltip\">Medium-like</a> sharing tooltip. The idea is to have a simple Twitter, Email, and generic ‚Äúother‚Äù sharing tooltip appear whenever text is selected on the page.</p>\n<p>For an illustration of the finished product, go ahead and select some text in this blog-post.</p>\n<hr>\n<p><strong>Table of contents</strong></p>\n<ul>\n<li>\n<p><a href=\"#creating-the-tool-tip\">Creating the tool-tip</a></p>\n<ul>\n<li><a href=\"#making-a-tool-tip-container\">Making a tool-tip container</a></li>\n<li><a href=\"#creating-and-styling-the-social-sharing-links\">Creating and styling the social-sharing links</a></li>\n<li><a href=\"#adding-an-indicator-like-an-arrow-or-carrot\">Adding an indicator like an arrow or carrot</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#customizing-the-social-sharing-behavior\">Customizing the social-sharing behavior</a></p>\n<ul>\n<li><a href=\"#creating-a-twitter-sharing-url\">Creating a Twitter sharing url</a></li>\n<li><a href=\"#creating-a-email-sharing-url\">Creating a Email sharing url</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#using-the-selection-object-to-add-the-selected-text-to-the-url\">Using the Selection object to add the selected text to the url</a></p>\n<ul>\n<li><a href=\"#adding-a-helper-function-to-modify-url-parameters\">Adding a helper function to modify url parameters</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#showing-the-tooltip-over-the-selected-text\">Showing the tooltip over the selected text</a></p>\n<ul>\n<li><a href=\"#conditionally-rendering-the-tooltip\">Conditionally rendering the tooltip</a></li>\n<li><a href=\"#placing-the-tooltip-on-the-right-spot\">Placing the tooltip on the right spot</a></li>\n</ul>\n</li>\n<li><a href=\"#bonus-using-the-sharingapi-to-default-to-os-default-sharing-panel\">Bonus: using the SharingApi to default to OS-default sharing panel</a></li>\n</ul>\n<hr>\n<h2>Creating the tool-tip</h2>\n<p>The most basic need we have to create a Medium-like sharing tooltip is well, a tooltip. This consists typically of three parts:</p>\n<ol>\n<li>A tool-tip container</li>\n<li>Social-sharing links</li>\n<li>An arrow or carrot pointing to the selected text</li>\n</ol>\n<p>Let‚Äôs go step by step creating each of these.</p>\n<h3>Making a tool-tip container</h3>\n<p>The tool-tip container can just be a <code class=\"language-text\">&lt;div&gt;</code>. It should initially be hidden, since no text is selected yet, and absolutely positioned, so it can be moved around as the text selection changes. Since it‚Äôs initially hidden, it‚Äôs initial position can be anywhere, but we‚Äôll set it to be at <code class=\"language-text\">top: 0px; left: 0px</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>tooltip-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.hidden</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.tooltip-container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And that‚Äôs it! Now remember that this <code class=\"language-text\">tooltip-container</code> doesn‚Äôt have any styling. It‚Äôs just a way for us to control the positioning of the social-sharing icons, <code class=\"language-text\">links-container</code>, and selected text indicator, <code class=\"language-text\">rotated-square</code>. The styling of our tool-tip we‚Äôll leave until later.</p>\n<h3>Creating and styling the social-sharing links</h3>\n<p>For our purposes, we want social sharing links to Twitter üê¶, Email ‚úâÔ∏è, and optionally a <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/share\">Web Share API native browser sharing mechanism</a> üß∞. We can add this to our tool-tip container, <code class=\"language-text\">&lt;div class=&quot;tooltip-container&quot;&gt;&lt;/div&gt;</code>, as a <code class=\"language-text\">&lt;div class=&quot;links-container&quot;&gt;</code> with a handful of <code class=\"language-text\">&lt;a href&gt;</code> links.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>links-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n    <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>https://twitter.com/intent/tweet?url=${pageUrl}&amp;text=${description}:\"${text}\"&amp;via=luqven<span class=\"token punctuation\">'</span></span>\n  <span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>emoji<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>twitter<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>img<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>üê¶<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n  ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>For out next step, we want our social-sharing links to look something like the Medium tool-tip. So we‚Äôll give them a dark background color and box-shadow, and <code class=\"language-text\">flex</code> them all in a row. The position of the links is <code class=\"language-text\">relative</code> since it‚Äôs inside out absolutely positioned <code class=\"language-text\">tooltip-container</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.links-container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> relative<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex-direction</span><span class=\"token punctuation\">:</span> row<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> space-evenly<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 120px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 35px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #041e42<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">box-shadow</span><span class=\"token punctuation\">:</span> -1px 1px 4px 1px #041e4254<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> 4px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-left</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-right</span><span class=\"token punctuation\">:</span> 5px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Adding an indicator like an arrow or carrot</h3>\n<p>This will come down to stylistic preference for some. But, it‚Äôs a well-enough established practice that I‚Äôm recommending we go ahead and use it.</p>\n<p>Adding this contextual-queue entails placing a rotated box bellow our <code class=\"language-text\">links-container</code> that acts as an arrow to the selected text. It‚Äôs absolutely positioned as well so that it can move about the page freely, alongside the <code class=\"language-text\">links-container</code>. We‚Äôll control it‚Äôs <code class=\"language-text\">top</code> and <code class=\"language-text\">left</code> position using using JS as well later on.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>rotated-square<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.rotated-square</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #041e42<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>45deg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 25px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> absolute<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Customizing the social-sharing behavior</h2>\n<p>Typically, every social network has it‚Äôs own url-path or API for sharing content outside its network. For Twitter and Email, however, it‚Äôs quite simple.</p>\n<h3>Creating a Twitter sharing url</h3>\n<p>For twitter, all we need to do is modify a url with specific query parameters. Namely, we need the <code class=\"language-text\">url</code>, <code class=\"language-text\">text</code>, and <code class=\"language-text\">via</code> parameters. A query that shares a tweet linking to this site, for example, might look like this:\n<a href='https://twitter.com/intent/tweet?url=https://www.luisball.com&text=Luis Ball: software engineer&via=luqven'>https://twitter.com/intent/tweet?url=https://www.luisball.com&#x26;text=Luis Ball: software engineer&#x26;via=luqven</a></p>\n<h3>Creating a Email sharing url</h3>\n<p>To share the selection via email it‚Äôs even easier. We just need to add a <code class=\"language-text\">mailto</code> link to our sharing options. Something like: <a href='mailto:name@email.com?subject=\"Luis Ball\"&body=\"Software Engineer\"%0D%0A...%0D%0A\"The best of the best\", \"https://www.luisball.com\"'>mailto:name@email.com?subject=‚ÄúLuis Ball‚Äù&#x26;body=‚ÄúSoftware Engineer‚Äù%0D%0A‚Ä¶%0D%0A‚ÄùThe best of the best‚Äù, ‚Äúhttps://www.luisball.com‚Äù</a></p>\n<blockquote>\n<p>Note the <code class=\"language-text\">%0D%0A</code>; these are our new paragraph URI codes. You can read more about them at the <a href=\"https://en.wikipedia.org/wiki/Mailto\">mailto URI Scheme</a> docs.</p>\n</blockquote>\n<h2>Using the Selection object to add the selected text to the url</h2>\n<p>We want people to share the selection they‚Äôve just made as well as the url of the page. This is where knowing how to use the <code class=\"language-text\">Selection</code> object come into play. In React, we can even make use of a custom <code class=\"language-text\">useSelection()</code> <a href=\"\">hook</a> that does a lot of the heavy lifting for us.</p>\n<p>Essentially, we want to end up with an object, <code class=\"language-text\">selected = { text, selection }</code>, where <code class=\"language-text\">text</code> is a string of the selected text and <code class=\"language-text\">selection</code> is the <code class=\"language-text\">Selection</code> object itself. For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"text\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"where text is a string of the selected text\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"selection\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    Selection<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      anchorNode<span class=\"token operator\">:</span> #text <span class=\"token string\">\", where \"</span>‚Äã‚Äã<span class=\"token punctuation\">,</span>\n      anchorOffset<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      caretBidiLevel<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      focusNode<span class=\"token operator\">:</span> #text <span class=\"token string\">\" is a string of the selected text and \"</span><span class=\"token punctuation\">,</span>\n      focusOffset<span class=\"token operator\">:</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span>\n      isCollapsed<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      rangeCount<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">\"Range\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token operator\">&lt;</span>prototype<span class=\"token operator\">></span><span class=\"token operator\">:</span> SelectionPrototype <span class=\"token punctuation\">{</span> getRangeAt<span class=\"token operator\">:</span> <span class=\"token function\">getRangeAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> addRange<span class=\"token operator\">:</span> <span class=\"token function\">addRange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> removeRange<span class=\"token operator\">:</span> <span class=\"token function\">removeRange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ‚Ä¶ <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      text<span class=\"token operator\">:</span> <span class=\"token string\">\"where text is a string of the selected text\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token operator\">&lt;</span>prototype<span class=\"token operator\">></span><span class=\"token operator\">:</span> Object <span class=\"token punctuation\">{</span> ‚Ä¶ <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      share<span class=\"token operator\">-</span>tooltip<span class=\"token punctuation\">.</span>js<span class=\"token operator\">:</span><span class=\"token number\">26</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And using the <code class=\"language-text\">useSelection()</code> hook, the object should update every time the selection on the page changes. Once we have our <code class=\"language-text\">{text, selection}</code> object, we can use it to include the selected text string in our sharing urls.</p>\n<h3>Adding a helper function to modify url parameters</h3>\n<p>To make this simpler, we‚Äôll use a JS helper function that formats our sharing url depending on the <code class=\"language-text\">type</code> of sharing, i.e. <code class=\"language-text\">&quot;twitter&quot;</code> vs <code class=\"language-text\">&quot;email&quot;</code>. We‚Äôll also give it the <code class=\"language-text\">text</code> that was selected and the <code class=\"language-text\">pageUrl</code> as arguments. Optionally, we can pass in <code class=\"language-text\">title</code> and <code class=\"language-text\">description</code> parameters as well, which for this site are generated by GraphQL queries and stored on a per-blog-post-level.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// accepts string designating link type, returns link url</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> createShareLink <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  type<span class=\"token punctuation\">,</span>\n  title <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  description <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  text<span class=\"token punctuation\">,</span>\n  pageUrl\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> twitterUrl <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://twitter.com/intent/tweet?url=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pageUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;text=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>description<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">:\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>text<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"&amp;via=luqven</span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token keyword\">const</span> emailUrl <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">mailto:name@email.com?subject=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;body=\"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>text<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\"%0D%0A...%0D%0A</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>description<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>pageUrl<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n  <span class=\"token keyword\">const</span> shareUrl <span class=\"token operator\">=</span> type <span class=\"token operator\">===</span> <span class=\"token string\">\"twitter\"</span> <span class=\"token operator\">?</span> twitterUrl <span class=\"token operator\">:</span> emailUrl\n\n  <span class=\"token keyword\">return</span> shareUrl\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, by setting the helper function as the <code class=\"language-text\">href</code> attribute in our link components, our sharing-url updates every time the selection changes and the component re-renders.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span>\n  <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">createShareLink</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">\"email\"</span><span class=\"token punctuation\">,</span>\n    postTitle<span class=\"token punctuation\">,</span>\n    postDescription<span class=\"token punctuation\">,</span>\n    selected<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span>\n    pageUrl\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>shareLink<span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginTop<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> <span class=\"token string\">\"white\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>emoji<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>img<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      ‚úâÔ∏è\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2>Showing the tooltip over the selected text</h2>\n<p>Now that we have a tooltip to show and its sharing links setup, we need to choose when and where to render it.</p>\n<h3>Conditionally rendering the tooltip</h3>\n<p>The first thing is to hide the tooltip by default, since on first render text has not been selected. We can do this the old fashioned way, by adding and removing a <code class=\"language-text\">.hidden</code> class conditionally that sets or removed the <code class=\"language-text\">display: none</code> attribute on our tooltip. But with react, its easier to simply conditionally render the tooltip altogether. We do that by determining if our <code class=\"language-text\">selected</code> variable, which is using the <code class=\"language-text\">useSelected()</code> hook to store the <code class=\"language-text\">Selected</code> object, is undefined or empty.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// if no current selection render nothing</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">!</span>selected <span class=\"token operator\">||</span>\n  <span class=\"token operator\">!</span>selected<span class=\"token punctuation\">.</span>text <span class=\"token operator\">||</span>\n  <span class=\"token operator\">!</span>selected<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>length <span class=\"token operator\">||</span>\n  selected<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Placing the tooltip on the right spot</h3>\n<p>Once we‚Äôve decided to render to tooltip, we have to make sure it‚Äôs located by the selected text. To do this, we need to:</p>\n<ol>\n<li>store some information about where the selection is on the page.</li>\n<li>calculate new top &#x26; left offsets whenever selection changes</li>\n<li>store the currently selected range &#x26; its size and position relative to the viewport</li>\n<li>set the new location based on the position of the range</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>location<span class=\"token punctuation\">,</span> setLocation<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>top<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> left<span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token comment\">// whenever selection changes calculate new top &amp; left offsets</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> position <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span>scrollTop <span class=\"token operator\">||</span> document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>scrollTop<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> body <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selected <span class=\"token operator\">&amp;&amp;</span> selected<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// store the currently selected range</span>\n        <span class=\"token keyword\">let</span> range <span class=\"token operator\">=</span> selected<span class=\"token punctuation\">.</span>selection<span class=\"token punctuation\">.</span><span class=\"token function\">getRangeAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// store the size of the range and its position relative to the viewport</span>\n        <span class=\"token keyword\">let</span> rect <span class=\"token operator\">=</span> range<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// there's some stylistic hard-coding bellow, it's to place the tooltip slightly off center</span>\n        <span class=\"token function\">setLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n            top<span class=\"token operator\">:</span> position <span class=\"token operator\">+</span> rect<span class=\"token punctuation\">.</span>top <span class=\"token operator\">-</span> <span class=\"token constant\">TOOLTIP_HEIGHT</span> <span class=\"token operator\">*</span> <span class=\"token constant\">FACTOR</span><span class=\"token punctuation\">,</span>\n            left<span class=\"token operator\">:</span> rect<span class=\"token punctuation\">.</span>left <span class=\"token operator\">+</span> rect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> body<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingClientRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>selected<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Because this logic is all wrapped in a <code class=\"language-text\">useEffect()</code> hook, it will apply the changes to the tooltip on every render. And, as we‚Äôve established, every time the selection changes our component will re-render. Making it so that our tooltip should always be correctly positioned relative to the currently selected text.</p>\n<p>And there we have it! Now your page has a sharing tooltip that gets rendered near any selected text on your page.</p>\n<h2>Bonus: using the SharingApi to default to OS-default sharing panel</h2>\n<p>A neat little addition to our tooltip would be the browser‚Äôs native ShareApi (when supported). It‚Äôs that neat-looking drawer that pops up whenever you press the sharing icon on your phone (some desktop browsers do this too). To support this built-in sharing tooltip, allwe need to do is:</p>\n<ol>\n<li>Determine is the browser has SharingApi support</li>\n<li>Conditionally add an icon for the ShareApi</li>\n<li>Add a link to that icon that triggers the API</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// store var that tells us if shareApi is supported</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>shareApi<span class=\"token punctuation\">,</span> setShareApi<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>supported<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> navigator<span class=\"token operator\">:</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span>\n<span class=\"token comment\">// when we store the page url on first render, determine if shareApi is supported</span>\n<span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setPageUrl</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setShareApi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>supported<span class=\"token operator\">:</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>navigator<span class=\"token punctuation\">.</span>share<span class=\"token punctuation\">,</span> navigator<span class=\"token operator\">:</span> navigator<span class=\"token punctuation\">,</span> clicked<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">...</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">LinksContainer</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n...\n</span><span class=\"token punctuation\">{</span>shareApi<span class=\"token punctuation\">.</span>supported <span class=\"token operator\">&amp;&amp;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token function\">createShareLink</span><span class=\"token punctuation\">(</span><span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> postTitle<span class=\"token punctuation\">,</span> postDescription<span class=\"token punctuation\">,</span> selected<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> pageUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">shareLink</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token string\">'shareButton'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> marginTop<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">:</span> <span class=\"token string\">'white'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>emoji<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>share-api<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>img<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">üß∞</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">LinksContainer</span></span><span class=\"token punctuation\">></span></span></code></pre></div>","frontmatter":{"title":"How to make your own Medium-like sharing tooltip","date":"July 15, 2020","description":"Browser Selection API tricks Part III"}}},"pageContext":{"slug":"/medium-share-tooltip-how-to/","previous":{"fields":{"slug":"/styling-document-selection-part-2/"},"frontmatter":{"title":"Styling selected text with CSS"}},"next":{"fields":{"slug":"/windows-javascropt-development-with-wsl/"},"frontmatter":{"title":"Javascript development on windows with WSL"}}}}}