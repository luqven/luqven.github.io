<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Luis Ball]]></title><description><![CDATA[Luis H. Ball Jr: Dad, Software Engineer, Pittsburgh Sports Fan]]></description><link>https://gatsby-starter-blog-demo.netlify.app</link><generator>GatsbyJS</generator><lastBuildDate>Thu, 13 May 2021 02:51:39 GMT</lastBuildDate><item><title><![CDATA[Best practices for requestIdleCallback and requestAnimationFrame in 2021]]></title><description><![CDATA[You’ll often want to schedule work to happen in response to browser events. For example, imagine every time the user scrolls to the bottom…]]></description><link>https://gatsby-starter-blog-demo.netlify.app/request-animation-frame-versus-request-idle-callback/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/request-animation-frame-versus-request-idle-callback/</guid><pubDate>Thu, 13 May 2021 01:29:14 GMT</pubDate><content:encoded>&lt;p&gt;You’ll often want to schedule work to happen in response to browser events.&lt;/p&gt;
&lt;p&gt;For example, imagine every time the user scrolls to the bottom of their feed, the site load more posts.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Infinite scrolling example by Corbacho (&lt;a href=&quot;https://codepen.io/dcorb&quot;&gt;@dcorb&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;iframe height=&quot;400&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;Infinite scrolling throttled&quot; src=&quot;https://codepen.io/dcorb/embed/preview/eJLMxa?height=400&amp;theme-id=dark&amp;default-tab=result&quot; frameborder=&quot;no&quot; loading=&quot;lazy&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&apos;https://codepen.io/dcorb/pen/eJLMxa&apos;&gt;Infinite scrolling throttled&lt;/a&gt; by Corbacho
  (&lt;a href=&apos;https://codepen.io/dcorb&apos;&gt;@dcorb&lt;/a&gt;) on &lt;a href=&apos;https://codepen.io&apos;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;p&gt;The thing is, if you’re not careful, you can &lt;a href=&quot;https://johnresig.com/blog/learning-from-twitter/&quot;&gt;harm the responsiveness of your site&lt;/a&gt;. And in the ever-evolving world of web-standards, it can be hard to say up to date with best practices.&lt;/p&gt;
&lt;p&gt;Let’s take a look at &lt;strong&gt;what we can do in 2021 to “throttle”, “debounce”, or otherwise limit function calls in response to browser events&lt;/strong&gt; and maintain a great user experience (UX).&lt;/p&gt;
&lt;p&gt;Recommended background readings:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Alexander Farkas’ &lt;a href=&quot;https://stackoverflow.com/a/44779316/11760796&quot;&gt;StackOverflow comment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Nolan Lawson’s &lt;a href=&quot;https://nolanlawson.com/2018/09/01/a-tour-of-javascript-timers-on-the-web/&quot;&gt;A tour of JavaScript timers on the web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;David Corbacho’s &lt;a href=&quot;https://css-tricks.com/debouncing-throttling-explained-examples/&quot;&gt;Debouncing and Throttling Explained Through Examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chris Coyier’s &lt;a href=&quot;https://css-tricks.com/the-difference-between-throttling-and-debouncing/#throttling-enforces-a-maximum-number-of-times-a-function-can-be-called-over-time-as-in-execute-this-function-at-most-once-every-100-milliseconds&quot;&gt;The Difference Between Throttling and Debouncing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Paul Lewis’s &lt;a href=&quot;https://developers.google.com/web/updates/2015/08/using-requestidlecallback&quot;&gt;Using requestIdleCallback&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Paul Lewis’ &lt;a href=&quot;https://www.html5rocks.com/en/tutorials/speed/animations/&quot;&gt;Leaner, Meaner, Faster Animations with requestAnimationFrame&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;What makes webpages feel fast or slow&lt;/h2&gt;
&lt;p&gt;A webpage’s performance in part depends on its ability to maintain 60 frames per second (FPS). A page is rendered one frame at a time. When the FPS reaches 60, the experience on the page is buttery smooth. When it drops bellow 60 FPS, the page will start feel slow.&lt;/p&gt;
&lt;p&gt;By loading all those new posts as the user scrolls, you could overburden the browser’s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Main_thread&quot;&gt;&lt;strong&gt;main thread&lt;/strong&gt;&lt;/a&gt;. This would limit its ability to maintain rendering at 60FPS and make the page feel unresponsive.&lt;/p&gt;
&lt;p&gt;In other words, if you do too much at once in response to an event you end up with bad UX.&lt;/p&gt;
&lt;h2&gt;Using &lt;code class=&quot;language-text&quot;&gt;requestAnimationFrame&lt;/code&gt; to run callbacks between frame paints&lt;/h2&gt;
&lt;p&gt;Thankfully, there are ways to schedule the work so the main thread &lt;em&gt;doesn’t&lt;/em&gt; get overburdened. You can tell the browser its cool to wait until it isn’t so busy before getting back to work.&lt;/p&gt;
&lt;p&gt;Traditionally, this was done with the &lt;code class=&quot;language-text&quot;&gt;window.requestAnimationFrame(callback)&lt;/code&gt;, or &lt;code class=&quot;language-text&quot;&gt;rAF&lt;/code&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame&quot;&gt;method&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This method tells the browser you want to run a &lt;code class=&quot;language-text&quot;&gt;callback&lt;/code&gt;, cb, function before the start of the next frame’s paint. &lt;code class=&quot;language-text&quot;&gt;rAF&lt;/code&gt; won’t be called more or less times than the browser calculates the layout of the page, or roughly every &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame#notes&quot;&gt;16.667 milliseconds&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;resize&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;updateFeed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;$feed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// cb that perform some DOM modifications&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Generally speaking, it &lt;a href=&quot;(https://stackoverflow.com/a/44779316/11760796)&quot;&gt;makes sense&lt;/a&gt; to throttle most things with &lt;code class=&quot;language-text&quot;&gt;rAF&lt;/code&gt; because you wouldn’t request layout changes from the browser more often than it renders the layout. However, many browser events are already synced to the browser’s rendering of the page, like &lt;code class=&quot;language-text&quot;&gt;scroll&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So, instead, &lt;code class=&quot;language-text&quot;&gt;rAF&lt;/code&gt; is used to move layout modification to the end of a frame. This avoid invalidating the DOM layout before you’ve had a chance to finish running all the logic inside the same frame.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;rAF&lt;/code&gt; has some shortcomings however. For starters &lt;code class=&quot;language-text&quot;&gt;rAF&lt;/code&gt; doesn’t know when a user is done interacting with the page.&lt;/p&gt;
&lt;p&gt;So while it’s nice to know your &lt;code class=&quot;language-text&quot;&gt;callback&lt;/code&gt; &lt;em&gt;will&lt;/em&gt; get called before every frame repaint, sometimes you want it to wait a little longer. Ideally, you’d &lt;strong&gt;schedule&lt;/strong&gt; the &lt;code class=&quot;language-text&quot;&gt;cb&lt;/code&gt; to run when nothing else is happening.&lt;/p&gt;
&lt;h2&gt;Debouncing callbacks for improved performance&lt;/h2&gt;
&lt;p&gt;But just how much performance gain is there &lt;em&gt;really&lt;/em&gt; from using a debounce?&lt;/p&gt;
&lt;p&gt;Bellow, you can see David Corbacho neat visual demonstration of the difference between debouncing and not debouncing &lt;code class=&quot;language-text&quot;&gt;cb&lt;/code&gt; calls.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Trailing debounce example by Corbacho (&lt;a href=&quot;https://codepen.io/dcorb&quot;&gt;@dcorb&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;iframe height=&quot;400&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;Debounce. Trailing&quot; src=&quot;https://codepen.io/dcorb/embed/preview/KVxGqN?height=400&amp;theme-id=dark&amp;default-tab=result&quot; frameborder=&quot;no&quot; loading=&quot;lazy&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&apos;https://codepen.io/dcorb/pen/KVxGqN&apos;&gt;Debounce. Trailing&lt;/a&gt; by Corbacho
  (&lt;a href=&apos;https://codepen.io/dcorb&apos;&gt;@dcorb&lt;/a&gt;) on &lt;a href=&apos;https://codepen.io&apos;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;p&gt;You’ll not that with the debounce, far fewer &lt;code class=&quot;language-text&quot;&gt;callback&lt;/code&gt; fires happen. In an scenario where you don’t need to react to every single event, this means you’ve saved a ton of computation time!&lt;/p&gt;
&lt;h2&gt;Using &lt;code class=&quot;language-text&quot;&gt;lodash&lt;/code&gt; to &lt;code class=&quot;language-text&quot;&gt;debounce&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;throttle&lt;/code&gt; &lt;code class=&quot;language-text&quot;&gt;rAF&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Thankfully&lt;code class=&quot;language-text&quot;&gt;lodash&lt;/code&gt;’s &lt;code class=&quot;language-text&quot;&gt;_.debounce()&lt;/code&gt;, which you can use in &lt;a href=&quot;https://github.com/lodash/lodash/blob/2f79053d7bc7c9c9561a30dda202b3dcd2b72b90/debounce.js&quot;&gt;standalone&lt;/a&gt; fashion if you don’t want to add it as a dependency, makes implementing debounces easy.&lt;/p&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;_.debounce&lt;/code&gt; method &lt;a href=&quot;https://css-tricks.com/the-difference-between-throttling-and-debouncing/#debouncing-enforces-that-a-function-not-be-called-again-until-a-certain-amount-of-time-has-passed-without-it-being-called-as-in-execute-this-function-only-if-100-milliseconds-have-passed-witho&quot;&gt;“enforces that a function not be called again until a certain amount of time has passed without it being called”&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So we could do something like making the page wait until 400 milliseconds have gone by between &lt;code class=&quot;language-text&quot;&gt;updateFeed&lt;/code&gt; calls before trying to update the feed.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;cb&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;updateFeed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;$feed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; waitMs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;400&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&quot;resize&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  _&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debounce&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cb&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; waitMs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Using &lt;code class=&quot;language-text&quot;&gt;requestIdleCallback&lt;/code&gt; to run &lt;code class=&quot;language-text&quot;&gt;cb&lt;/code&gt; only when event-loop isn’t busy&lt;/h2&gt;
&lt;p&gt;While the previous performance gains are great, we could ideally leverage all the information the browser has about the event loop. This way, we could implement a solution that doesn’t run a &lt;code class=&quot;language-text&quot;&gt;cb&lt;/code&gt; unless there’s some free computation time.&lt;/p&gt;
&lt;p&gt;This is where the &lt;code class=&quot;language-text&quot;&gt;window.requestIdleCallback(callback[, options])&lt;/code&gt;, or &lt;code class=&quot;language-text&quot;&gt;rIC&lt;/code&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/requestIdleCallback&quot;&gt;method&lt;/a&gt; comes in.&lt;/p&gt;
&lt;p&gt;It runs your &lt;code class=&quot;language-text&quot;&gt;callback&lt;/code&gt; only &lt;em&gt;after&lt;/em&gt; the user is done doing stuff.&lt;/p&gt;
&lt;p&gt;To do this ourselves, we’d have to attach an insane amount of event listeners to the DOM telling us what the user is up to and when. Then, when they go quiet, we could try and run our &lt;code class=&quot;language-text&quot;&gt;cb&lt;/code&gt; hoping they’re really done interacting with the page.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;rIC&lt;/code&gt; gives us a foolproof way to run a &lt;code class=&quot;language-text&quot;&gt;callback&lt;/code&gt; only when there’s free time in a frame. Typically, this happens when the user is inactive.&lt;/p&gt;
&lt;p&gt;In our news-feed example, this means that the new posts would only be requested when the user is &lt;em&gt;done&lt;/em&gt; scrolling, clicking a button, or otherwise milling about on our page.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;updateFeed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;$feed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;cb&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;update&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; waitMs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;400&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&quot;resize&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  _&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debounce&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;requestIdleCallback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cb&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; waitMs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That’s all well and good, but what if the user is doing a bunch of things on the page immediately after scrolling to the bottom? Won’t the scheduled news-feed update be delayed endlessly?&lt;/p&gt;
&lt;p&gt;That’s where &lt;code class=&quot;language-text&quot;&gt;rIC&lt;/code&gt;’s &lt;code class=&quot;language-text&quot;&gt;timeout&lt;/code&gt; property comes in. You can define a &lt;em&gt;maximum&lt;/em&gt; amount of time &lt;code class=&quot;language-text&quot;&gt;requestIdleCallback&lt;/code&gt; can wait before your &lt;code class=&quot;language-text&quot;&gt;callback&lt;/code&gt; is added to the event-loop.&lt;/p&gt;
&lt;p&gt;So in our news-feed example, if we told &lt;code class=&quot;language-text&quot;&gt;rIC&lt;/code&gt; it was only allowed to wait &lt;code class=&quot;language-text&quot;&gt;{timeout: 2000}&lt;/code&gt;, after at most 2 seconds our &lt;code class=&quot;language-text&quot;&gt;cb&lt;/code&gt; would run and feed update would be queued in the event-loop.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;updateFeed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;$feed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;cb&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;update&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; timeout &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; timeout&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; waitMs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;400&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&quot;resize&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  _&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debounce&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;requestIdleCallback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cb&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; timeout&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; waitMs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;You’ll note that even when we use a combination of &lt;code class=&quot;language-text&quot;&gt;rIC&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;rAF&lt;/code&gt;, we &lt;em&gt;still&lt;/em&gt; need to debounce and control how often &lt;code class=&quot;language-text&quot;&gt;rIC&lt;/code&gt; can be called to limit the impact on the event-loop.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Making super-duper sure your callback runs on the first event fire&lt;/h2&gt;
&lt;p&gt;Sometimes you want a &lt;code class=&quot;language-text&quot;&gt;callback&lt;/code&gt; to run on the first event fire. Using the default &lt;code class=&quot;language-text&quot;&gt;_.debounce&lt;/code&gt; behavior, this won’t happen. The &lt;code class=&quot;language-text&quot;&gt;cb&lt;/code&gt; won’t be called until the events have stopped firing.&lt;/p&gt;
&lt;p&gt;To override &lt;code class=&quot;language-text&quot;&gt;lodash&lt;/code&gt;’s default &lt;code class=&quot;language-text&quot;&gt;_.debounce&lt;/code&gt; behavior, you can make use of the optional &lt;code class=&quot;language-text&quot;&gt;leading&lt;/code&gt; flag. This tells &lt;code class=&quot;language-text&quot;&gt;_.debounce&lt;/code&gt; to invoke the &lt;code class=&quot;language-text&quot;&gt;callback&lt;/code&gt; immediately but not invoke it again unless &lt;code class=&quot;language-text&quot;&gt;waitMs&lt;/code&gt; time has gone by.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;updateFeed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;$feed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;cb&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;requestAnimationFrame&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;update&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;rIC&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;requestIdleCallback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;cb&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; timeout&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; timeout &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; timeout&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2000&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; waitMs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;400&lt;/span&gt;

&lt;span class=&quot;token function&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;resize&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; _&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debounce&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rIc&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; waitMs&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; leading&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Again, David Corbacho has an excellent animation illustrating how this works.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Trailing debounce example by Corbacho (&lt;a href=&quot;https://codepen.io/dcorb&quot;&gt;@dcorb&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;iframe height=&quot;400&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;Debounce. Leading&quot; src=&quot;https://codepen.io/dcorb/embed/preview/GZWqNV?height=400&amp;theme-id=dark&amp;default-tab=result&quot; frameborder=&quot;no&quot; loading=&quot;lazy&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&apos;https://codepen.io/dcorb/pen/GZWqNV&apos;&gt;Debounce. Leading&lt;/a&gt; by Corbacho
  (&lt;a href=&apos;https://codepen.io/dcorb&apos;&gt;@dcorb&lt;/a&gt;) on &lt;a href=&apos;https://codepen.io&apos;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;h2&gt;Debounce wisely&lt;/h2&gt;
&lt;p&gt;Using &lt;code class=&quot;language-text&quot;&gt;rAF&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;rIC&lt;/code&gt; in combination with &lt;code class=&quot;language-text&quot;&gt;_.debounce&lt;/code&gt; is a great way to run logic in response to browser events without harming UX. But it doesn’t come without pitfalls.&lt;/p&gt;
&lt;p&gt;For example, &lt;code class=&quot;language-text&quot;&gt;rIC&lt;/code&gt; calls are not an ideal place to preform DOM modifications, since the DOM reference at invocation could already have been invalidated. Moreover, &lt;code class=&quot;language-text&quot;&gt;rIC&lt;/code&gt; support in even modern browsers &lt;a href=&quot;https://caniuse.com/requestidlecallback&quot;&gt;varies significantly&lt;/a&gt;, where even Chrome doesn’t quite behave the way you’d expect.&lt;/p&gt;
&lt;p&gt;But for a good amount of use cases out there (infinity-scrolling, update-on-resize, parallax, etc) this combination can and should be used.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[WSL2 is a memory hog and how to fix it.]]></title><description><![CDATA[Imagine my surprise when playing around with the Ubuntu distro in WSL, I find out that 50% of my memory at idle is in use. I have 16GB of…]]></description><link>https://gatsby-starter-blog-demo.netlify.app/wsl2-is-a-memory-hog/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/wsl2-is-a-memory-hog/</guid><pubDate>Fri, 25 Sep 2020 15:56:43 GMT</pubDate><content:encoded>&lt;p&gt;Imagine my surprise when playing around with the Ubuntu distro in WSL, I find out that &lt;strong&gt;50% of my memory &lt;em&gt;at idle&lt;/em&gt;&lt;/strong&gt; is in use. I have 16GB of memory. Anything above 30% at idle should be an anomaly. There’s no reason for &lt;code class=&quot;language-text&quot;&gt;vmmemm&lt;/code&gt; to be taking up a whopping 10% of my available memory at idle. Or at least, I don’t there should be.&lt;/p&gt;
&lt;p&gt;Thankfully, &lt;a href=&quot;https://simonpeterdebbarma.com/&quot;&gt;Simon Peter Debbarma&lt;/a&gt; outlines &lt;a href=&quot;https://blog.simonpeterdebbarma.com/2020-04-memory-and-wsl/&quot;&gt;a way&lt;/a&gt; to limit the amount of RAM that the WSL distro can access at any given time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Use &lt;code class=&quot;language-text&quot;&gt;wsl -l -v&lt;/code&gt; to check out all running distros on your WSL. Then, &lt;code class=&quot;language-text&quot;&gt;wsl -t {insert distro}&lt;/code&gt; to terminate the ones in use. Or, simply &lt;code class=&quot;language-text&quot;&gt;wsl --shutdown&lt;/code&gt;. &lt;a href=&quot;https://blog.simonpeterdebbarma.com/2020-04-memory-and-wsl/&quot;&gt;🔗&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The tradeoff in performance by limiting the amount of RAM WSl can access is obvious. It doesn’t seem like WSL should be this inefficient, but maybe I’m splitting hairs here. Ubuntu inside windows does seem like its &lt;em&gt;still&lt;/em&gt; too good to be true doesn’t it?&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Javascript development on windows with WSL]]></title><description><![CDATA[Having to spend so much time at home as a result of these never ending lockdowns, I decided it was time to buy a proper desktop machine. I…]]></description><link>https://gatsby-starter-blog-demo.netlify.app/windows-javascropt-development-with-wsl/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/windows-javascropt-development-with-wsl/</guid><pubDate>Wed, 09 Sep 2020 19:45:18 GMT</pubDate><content:encoded>&lt;p&gt;Having to spend so much time at home as a result of these never ending lockdowns, I decided it was time to buy a proper desktop machine. I wasn’t looking to pay an “Apple tax” for it since reliability really wasn’t the priority, raw power was. So I took the Windows plunge again. First time back in DOS-land in 18 years.&lt;/p&gt;
&lt;p&gt;Part of the impetus was the recent release of Windows Subsystem for Linux, or &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/wsl/wsl2-index&quot;&gt;WSL&lt;/a&gt; 2.&lt;/p&gt;
&lt;p&gt;Microsoft has gone all out to try and win over software developers back onto the platform and away from UNIX-based systems with the WSL compatibility layer. It has even launched its very own &lt;a href=&quot;https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701?activetab=pivot:overviewtab&quot;&gt;Windows Terminal&lt;/a&gt;, which supports the Power Shell as well as Bash and other typical terminals. So naturally, it and WSL were the perfect fit for this new desktop machine.&lt;/p&gt;
&lt;p&gt;After a fairly painless &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/wsl/install-win10&quot;&gt;setup&lt;/a&gt;, I was up and running in the Bash terminal within 30 minutes. A few oh-my-zsh plugins later, and the development environment has become eerily similar to the one on my main machine, a 2019 MBP.&lt;/p&gt;
&lt;p&gt;This entire post, in fact, was done on the WSL enabled Windows machine.&lt;/p&gt;
&lt;p&gt;So does WSL 2 live up to the hype? Yes.. mostly. The only gripe I still have with WSL is the annoyingly convoluted way you have to navigate the file system. There’s windows and linux directories that in theory live in the same hard drive but often have no idea that’s the case.&lt;/p&gt;
&lt;p&gt;So WSL has come a long way. And it’s certainly possible to develop JavaScript applications on windows now a days nearly painlessly. But here’s still some room for improvement.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[How to make your own Medium-like sharing tooltip]]></title><description><![CDATA[This post is a WIP We’ve previously covered how to create a useSelection hook that stores the currently selected text and Styling selected…]]></description><link>https://gatsby-starter-blog-demo.netlify.app/medium-share-tooltip-how-to/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/medium-share-tooltip-how-to/</guid><pubDate>Thu, 16 Jul 2020 01:17:55 GMT</pubDate><content:encoded>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;This post is a WIP&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;We’ve previously covered how to &lt;a href=&quot;https://luisball.com/styling-document-selection/&quot;&gt;create a useSelection hook that stores the currently selected text&lt;/a&gt; and &lt;a href=&quot;https://luisball.com/styling-document-selection-part-2/&quot;&gt;Styling selected text with CSS&lt;/a&gt; in this series. If you haven’t taken a look, I recommend you do so now as we’ll be building off of those blog posts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For part 3 of this &lt;strong&gt;Browser Selection API&lt;/strong&gt; series, we’re going to build our own &lt;a href=&quot;https://dribbble.com/shots/1330226-Medium-Style-Tooltip&quot;&gt;Medium-like&lt;/a&gt; sharing tooltip. The idea is to have a simple Twitter, Email, and generic “other” sharing tooltip appear whenever text is selected on the page.&lt;/p&gt;
&lt;p&gt;For an illustration of the finished product, go ahead and select some text in this blog-post.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Table of contents&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;#creating-the-tool-tip&quot;&gt;Creating the tool-tip&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#making-a-tool-tip-container&quot;&gt;Making a tool-tip container&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#creating-and-styling-the-social-sharing-links&quot;&gt;Creating and styling the social-sharing links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#adding-an-indicator-like-an-arrow-or-carrot&quot;&gt;Adding an indicator like an arrow or carrot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;#customizing-the-social-sharing-behavior&quot;&gt;Customizing the social-sharing behavior&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#creating-a-twitter-sharing-url&quot;&gt;Creating a Twitter sharing url&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#creating-a-email-sharing-url&quot;&gt;Creating a Email sharing url&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;#using-the-selection-object-to-add-the-selected-text-to-the-url&quot;&gt;Using the Selection object to add the selected text to the url&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#adding-a-helper-function-to-modify-url-parameters&quot;&gt;Adding a helper function to modify url parameters&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;#showing-the-tooltip-over-the-selected-text&quot;&gt;Showing the tooltip over the selected text&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#conditionally-rendering-the-tooltip&quot;&gt;Conditionally rendering the tooltip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#placing-the-tooltip-on-the-right-spot&quot;&gt;Placing the tooltip on the right spot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#bonus-using-the-sharingapi-to-default-to-os-default-sharing-panel&quot;&gt;Bonus: using the SharingApi to default to OS-default sharing panel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Creating the tool-tip&lt;/h2&gt;
&lt;p&gt;The most basic need we have to create a Medium-like sharing tooltip is well, a tooltip. This consists typically of three parts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A tool-tip container&lt;/li&gt;
&lt;li&gt;Social-sharing links&lt;/li&gt;
&lt;li&gt;An arrow or carrot pointing to the selected text&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let’s go step by step creating each of these.&lt;/p&gt;
&lt;h3&gt;Making a tool-tip container&lt;/h3&gt;
&lt;p&gt;The tool-tip container can just be a &lt;code class=&quot;language-text&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. It should initially be hidden, since no text is selected yet, and absolutely positioned, so it can be moved around as the text selection changes. Since it’s initially hidden, it’s initial position can be anywhere, but we’ll set it to be at &lt;code class=&quot;language-text&quot;&gt;top: 0px; left: 0px&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;tooltip-container&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.hidden&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; none&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token selector&quot;&gt;.tooltip-container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that’s it! Now remember that this &lt;code class=&quot;language-text&quot;&gt;tooltip-container&lt;/code&gt; doesn’t have any styling. It’s just a way for us to control the positioning of the social-sharing icons, &lt;code class=&quot;language-text&quot;&gt;links-container&lt;/code&gt;, and selected text indicator, &lt;code class=&quot;language-text&quot;&gt;rotated-square&lt;/code&gt;. The styling of our tool-tip we’ll leave until later.&lt;/p&gt;
&lt;h3&gt;Creating and styling the social-sharing links&lt;/h3&gt;
&lt;p&gt;For our purposes, we want social sharing links to Twitter 🐦, Email ✉️, and optionally a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Navigator/share&quot;&gt;Web Share API native browser sharing mechanism&lt;/a&gt; 🧰. We can add this to our tool-tip container, &lt;code class=&quot;language-text&quot;&gt;&amp;lt;div class=&amp;quot;tooltip-container&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;, as a &lt;code class=&quot;language-text&quot;&gt;&amp;lt;div class=&amp;quot;links-container&amp;quot;&amp;gt;&lt;/code&gt; with a handful of &lt;code class=&quot;language-text&quot;&gt;&amp;lt;a href&amp;gt;&lt;/code&gt; links.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;links-container&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;https://twitter.com/intent/tweet?url=${pageUrl}&amp;amp;text=${description}:&quot;${text}&quot;&amp;amp;via=luishbjr1&lt;span class=&quot;token punctuation&quot;&gt;&apos;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
          &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;emoji&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;twitter&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;img&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;🐦&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;
  ...
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For out next step, we want our social-sharing links to look something like the Medium tool-tip. So we’ll give them a dark background color and box-shadow, and &lt;code class=&quot;language-text&quot;&gt;flex&lt;/code&gt; them all in a row. The position of the links is &lt;code class=&quot;language-text&quot;&gt;relative&lt;/code&gt; since it’s inside out absolutely positioned &lt;code class=&quot;language-text&quot;&gt;tooltip-container&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.links-container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; relative&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; flex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;flex-direction&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; row&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;justify-content&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; space-evenly&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;align-items&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; center&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 120px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 35px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #041E42&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; -1px 1px 4px 1px #041e4254&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 4px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;padding-left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 5px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;padding-right&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 5px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Adding an indicator like an arrow or carrot&lt;/h3&gt;
&lt;p&gt;This will come down to stylistic preference for some. But, it’s a well-enough established practice that I’m recommending we go ahead and use it. &lt;/p&gt;
&lt;p&gt;Adding this contextual-queue entails placing a rotated box bellow our &lt;code class=&quot;language-text&quot;&gt;links-container&lt;/code&gt; that acts as an arrow to the selected text. It’s absolutely positioned as well so that it can move about the page freely, alongside the &lt;code class=&quot;language-text&quot;&gt;links-container&lt;/code&gt;. We’ll control it’s &lt;code class=&quot;language-text&quot;&gt;top&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;left&lt;/code&gt; position using using JS as well later on.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;html&quot;&gt;&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;rotated-square&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;div&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;.rotated-square&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #041E42&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;transform&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;45deg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 25px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 25px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Customizing the social-sharing behavior&lt;/h2&gt;
&lt;p&gt;Typically, every social network has it’s own url-path or API for sharing content outside its network. For Twitter and Email, however, it’s quite simple. &lt;/p&gt;
&lt;h3&gt;Creating a Twitter sharing url&lt;/h3&gt;
&lt;p&gt;For twitter, all we need to do is modify a url with specific query parameters. Namely, we need the &lt;code class=&quot;language-text&quot;&gt;url&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;text&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;via&lt;/code&gt; parameters. A query that shares a tweet linking to this site, for example, might look like this:
&lt;a href=&apos;https://twitter.com/intent/tweet?url=https://www.luisball.com&amp;text=Luis Ball: software engineer&amp;via=luishbjr1&apos;&gt;https://twitter.com/intent/tweet?url=https://www.luisball.com&amp;#x26;text=Luis Ball: software engineer&amp;#x26;via=luishbjr1&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Creating a Email sharing url&lt;/h3&gt;
&lt;p&gt;To share the selection via email it’s even easier. We just need to add a &lt;code class=&quot;language-text&quot;&gt;mailto&lt;/code&gt; link to our sharing options. Something like: &lt;a href=&apos;mailto:name@email.com?subject=&quot;Luis Ball&quot;&amp;body=&quot;Software Engineer&quot;%0D%0A...%0D%0A&quot;The best of the best&quot;, &quot;https://www.luisball.com&quot;&apos;&gt;mailto:name@email.com?subject=“Luis Ball”&amp;#x26;body=“Software Engineer”%0D%0A…%0D%0A”The best of the best”, “https://www.luisball.com”&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note the &lt;code class=&quot;language-text&quot;&gt;%0D%0A&lt;/code&gt;; these are our new paragraph URI codes. You can read more about them at the &lt;a href=&quot;https://en.wikipedia.org/wiki/Mailto&quot;&gt;mailto URI Scheme&lt;/a&gt; docs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Using the Selection object to add the selected text to the url&lt;/h2&gt;
&lt;p&gt;We want people to share the selection they’ve just made as well as the url of the page. This is where knowing how to use the &lt;code class=&quot;language-text&quot;&gt;Selection&lt;/code&gt; object come into play. In React, we can even make use of a custom &lt;code class=&quot;language-text&quot;&gt;useSelection()&lt;/code&gt; &lt;a href=&quot;&quot;&gt;hook&lt;/a&gt; that does a lot of the heavy lifting for us. &lt;/p&gt;
&lt;p&gt;Essentially, we want to end up with an object, &lt;code class=&quot;language-text&quot;&gt;selected = { text, selection }&lt;/code&gt;, where &lt;code class=&quot;language-text&quot;&gt;text&lt;/code&gt; is a string of the selected text and &lt;code class=&quot;language-text&quot;&gt;selection&lt;/code&gt; is the &lt;code class=&quot;language-text&quot;&gt;Selection&lt;/code&gt; object itself. For example:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&quot;text&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;where text is a string of the selected text&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&quot;selection&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    Selection&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      anchorNode&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; #text &lt;span class=&quot;token string&quot;&gt;&quot;, where &quot;&lt;/span&gt;​​&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      anchorOffset&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      caretBidiLevel&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      focusNode&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; #text &lt;span class=&quot;token string&quot;&gt;&quot; is a string of the selected text and &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      focusOffset&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;33&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      isCollapsed&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      rangeCount&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      type&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Range&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prototype&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; SelectionPrototype &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; getRangeAt&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getRangeAt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; addRange&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;addRange&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; removeRange&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;removeRange&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; … &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      text&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;where text is a string of the selected text&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;prototype&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; Object &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; … &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      share&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;tooltip&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;js&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;26&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And using the &lt;code class=&quot;language-text&quot;&gt;useSelection()&lt;/code&gt; hook, the object should update every time the selection on the page changes. Once we have our &lt;code class=&quot;language-text&quot;&gt;{text, selection}&lt;/code&gt; object, we can use it to include the selected text string in our sharing urls.&lt;/p&gt;
&lt;h3&gt;Adding a helper function to modify url parameters&lt;/h3&gt;
&lt;p&gt;To make this simpler, we’ll use a JS helper function that formats our sharing url depending on the &lt;code class=&quot;language-text&quot;&gt;type&lt;/code&gt; of sharing, i.e. &lt;code class=&quot;language-text&quot;&gt;&amp;quot;twitter&amp;quot;&lt;/code&gt; vs &lt;code class=&quot;language-text&quot;&gt;&amp;quot;email&amp;quot;&lt;/code&gt;. We’ll also give it the &lt;code class=&quot;language-text&quot;&gt;text&lt;/code&gt; that was selected and the &lt;code class=&quot;language-text&quot;&gt;pageUrl&lt;/code&gt; as arguments. Optionally, we can pass in &lt;code class=&quot;language-text&quot;&gt;title&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;description&lt;/code&gt; parameters as well, which for this site are generated by GraphQL queries and stored on a per-blog-post-level.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// accepts string designating link type, returns link url&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; createShareLink &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;type&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; title&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; description&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; text&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pageUrl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; twitterUrl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;https://twitter.com/intent/tweet?url=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;pageUrl&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;amp;text=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;description&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;:&quot;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;text&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&amp;amp;via=luishbjr1&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; emailUrl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;mailto:name@email.com?subject=&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;title&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;amp;body=&quot;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;text&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;%0D%0A...%0D%0A&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;description&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;pageUrl&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; shareUrl &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;  type &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;twitter&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; twitterUrl &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; emailUrl&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; shareUrl&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, by setting the helper function as the &lt;code class=&quot;language-text&quot;&gt;href&lt;/code&gt; attribute in our link components, our sharing-url updates every time the selection changes and the component re-renders.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createShareLink&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;email&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; postTitle&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; postDescription&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; selected&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pageUrl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;shareLink&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; marginTop&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; color&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;white&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;emoji&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;img&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;✉️&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Showing the tooltip over the selected text&lt;/h2&gt;
&lt;p&gt;Now that we have a tooltip to show and its sharing links setup, we need to choose when and where to render it. &lt;/p&gt;
&lt;h3&gt;Conditionally rendering the tooltip&lt;/h3&gt;
&lt;p&gt;The first thing is to hide the tooltip by default, since on first render text has not been selected. We can do this the old fashioned way, by adding and removing a &lt;code class=&quot;language-text&quot;&gt;.hidden&lt;/code&gt; class conditionally that sets or removed the &lt;code class=&quot;language-text&quot;&gt;display: none&lt;/code&gt; attribute on our tooltip. But with react, its easier to simply conditionally render the tooltip altogether. We do that by determining if our &lt;code class=&quot;language-text&quot;&gt;selected&lt;/code&gt; variable, which is using the &lt;code class=&quot;language-text&quot;&gt;useSelected()&lt;/code&gt; hook to store the &lt;code class=&quot;language-text&quot;&gt;Selected&lt;/code&gt; object, is undefined or empty.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;// if no current selection render nothing&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;selected &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;selected&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;selected&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; selected&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Placing the tooltip on the right spot&lt;/h3&gt;
&lt;p&gt;Once we’ve decided to render to tooltip, we have to make sure it’s located by the selected text. To do this, we need to: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;store some information about where the selection is on the page.&lt;/li&gt;
&lt;li&gt;calculate new top &amp;#x26; left offsets whenever selection changes&lt;/li&gt;
&lt;li&gt;store the currently selected range &amp;#x26; its size and position relative to the viewport&lt;/li&gt;
&lt;li&gt;set the new location based on the position of the range&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setLocation&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;top&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; left&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// whenever selection changes calculate new top &amp;amp; left offsets&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; position &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;documentElement&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;scrollTop &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;scrollTop&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;body&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;selected &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; selected&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// store the currently selected range&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; range &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; selected&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;selection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getRangeAt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// store the size of the range and its position relative to the viewport&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; rect &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; range&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBoundingClientRect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// there&apos;s some stylistic hard-coding bellow, it&apos;s to place the tooltip slightly off center&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;setLocation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            top&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; position &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; rect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;top &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;TOOLTIP_HEIGHT&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;FACTOR&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            left&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; rect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;left &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; rect&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;width &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; body&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBoundingClientRect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;width &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;selected&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Because this logic is all wrapped in a &lt;code class=&quot;language-text&quot;&gt;useEffect()&lt;/code&gt; hook, it will apply the changes to the tooltip on every render. And, as we’ve established, every time the selection changes our component will re-render. Making it so that our tooltip should always be correctly positioned relative to the currently selected text.&lt;/p&gt;
&lt;p&gt;And there we have it! Now your page has a sharing tooltip that gets rendered near any selected text on your page.&lt;/p&gt;
&lt;h2&gt;Bonus: using the SharingApi to default to OS-default sharing panel&lt;/h2&gt;
&lt;p&gt;A neat little addition to our tooltip would be the browser’s native ShareApi (when supported). It’s that neat-looking drawer that pops up whenever you press the sharing icon on your phone (some desktop browsers do this too). To support this built-in sharing tooltip, allwe need to do is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Determine is the browser has SharingApi support&lt;/li&gt;
&lt;li&gt;Conditionally add an icon for the ShareApi&lt;/li&gt;
&lt;li&gt;Add a link to that icon that triggers the API&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// store var that tells us if shareApi is supported&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;shareApi&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setShareApi&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;supported&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; navigator&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// when we store the page url on first render, determine if shareApi is supported&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;setPageUrl&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;href&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;setShareApi&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;supported&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;navigator&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;share&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; navigator&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; navigator&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; clicked&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;LinksContainer&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
...
&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;shareApi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;supported &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; 
&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;a&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createShareLink&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;email&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; postTitle&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; postDescription&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; selected&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; pageUrl&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;shareLink&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;shareButton&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;p&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;token script language-javascript&quot;&gt;&lt;span class=&quot;token script-punctuation punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; marginTop&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; color&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;white&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;emoji&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;aria-label&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;share-api&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;img&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;🧰&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;p&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;a&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;LinksContainer&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Styling selected text with CSS]]></title><description><![CDATA[Some sites, like, again, Medium, style their selected text with their own background colors. It’s quite simple to do, and yet can really…]]></description><link>https://gatsby-starter-blog-demo.netlify.app/styling-document-selection-part-2/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/styling-document-selection-part-2/</guid><pubDate>Fri, 03 Jul 2020 13:42:55 GMT</pubDate><content:encoded>&lt;p&gt;Some sites, like, again, Medium, style their selected text with their own background colors. It’s quite simple to do, and yet can really help set one’s page apart. The trick is to use the &lt;code class=&quot;language-text&quot;&gt;::selected&lt;/code&gt; pseudo &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/::selection&quot;&gt;selector&lt;/a&gt;. For example if we wanted to give our selected text the classic ‘highlighter’ yellow look, we could do something like the example bellow.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;&lt;span class=&quot;token selector&quot;&gt;::selection&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token property&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; yellow&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There’s a handful of other properties that we can play with as well, like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;color&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;background-color&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;cursor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;caret-color&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;outline&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;text-decoration and its associated properties&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;text-emphasis-color&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;text-shadow&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This great &lt;a href=&quot;https://css-tricks.com/almanac/selectors/s/selection/&quot;&gt;example&lt;/a&gt; by Chris Coyer illustrates this well.&lt;/p&gt;
&lt;iframe height=&quot;470&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;::selection tests&quot; src=&quot;https://codepen.io/chriscoyier/embed/preview/qNLymj?height=470&amp;theme-id=dark&amp;default-tab=css,result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&apos;https://codepen.io/chriscoyier/pen/qNLymj&apos;&gt;::selection tests&lt;/a&gt; by Chris Coyier 
  (&lt;a href=&apos;https://codepen.io/chriscoyier&apos;&gt;@chriscoyier&lt;/a&gt;) on &lt;a href=&apos;https://codepen.io&apos;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;p&gt;For my personal site, I chose just to style the selection a different shade of blue from the default. It’s subtle enough that most people wouldn’t notice, but I find it soothing to have the highlighted text background colors be consistent across all browsers.&lt;/p&gt;
&lt;p&gt;The one caveat to the &lt;code class=&quot;language-text&quot;&gt;::selection&lt;/code&gt; pseudo selector is that, on mobile, it’s &lt;a href=&quot;https://caniuse.com/#feat=css-selection&quot;&gt;support&lt;/a&gt; is haphazard at best. You’ll notice it most on iOS’ Safari. &lt;/p&gt;
&lt;h2&gt;Up next&lt;/h2&gt;
&lt;p&gt;In the next post in this series, we’ll discuss how to combine the &lt;a href=&quot;https://luisball.com/styling-document-selection/&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;useSelect&lt;/code&gt;&lt;/a&gt; hook with these custom styles to create a share-tooltip that works on desktop and mobile.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Browser Selection API tricks]]></title><description><![CDATA[I’ve always wanted to implement something like Medium’s highlighting and sharing tooltip. But I was surprised just how much work it takes to…]]></description><link>https://gatsby-starter-blog-demo.netlify.app/styling-document-selection/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/styling-document-selection/</guid><pubDate>Thu, 02 Jul 2020 16:24:14 GMT</pubDate><content:encoded>&lt;p&gt;I’ve always wanted to implement something like &lt;strong&gt;Medium’s&lt;/strong&gt; highlighting and sharing tooltip. But I was surprised just how much work it takes to do it right, especially in SSR React applications. So in the next few blog posts I’ll be detailing some tips and tricks I used to create a medium-like sharing tooltip.&lt;/p&gt;
&lt;h2&gt;Getting the selected text from the document&lt;/h2&gt;
&lt;p&gt;First off, you’re going to want an easy way to reference the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Selection&quot;&gt;Selection object&lt;/a&gt;. This is the object that stores “the range of text selected by the user or the current position of the caret.” Specifically, we’re going to want &lt;code class=&quot;language-text&quot;&gt;Selection.toString()&lt;/code&gt; since that’s what returns the selected text we’d like to share with our peeps. Since we’re working with an SSR React application however, the &lt;code class=&quot;language-text&quot;&gt;document&lt;/code&gt; isn’t going to be available just anywhere. Moreover, we probably want keep this separate from the components that use the selected text. Which is to say, what we want is a Hook.&lt;/p&gt;
&lt;h3&gt;useSelection Hook&lt;/h3&gt;
&lt;p&gt;So let’s make a React hook that returns selected text and Selection object. First we’re going to want to import &lt;code class=&quot;language-text&quot;&gt;useState&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;useEffect&lt;/code&gt; from React. We are making a hook after all. But note that in SSR React apps, the &lt;code class=&quot;language-text&quot;&gt;window&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;document&lt;/code&gt; are only accessible within specific react-lifecycle methods. We’re going to access them in the &lt;code class=&quot;language-text&quot;&gt;useEffect&lt;/code&gt; hook and store the values we draw from them using the &lt;code class=&quot;language-text&quot;&gt;useState&lt;/code&gt; hook. In this case, that means storing our selected text:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;selected&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setSelected&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token function&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; selObj &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSelection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;setSelected&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;selObj&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now if all we wanted was a one time snapshot of the &lt;code class=&quot;language-text&quot;&gt;Selection&lt;/code&gt; object, we’d be set. But what we really want is the &lt;em&gt;current&lt;/em&gt; value of the &lt;code class=&quot;language-text&quot;&gt;Selection&lt;/code&gt;. In other words, whenever the selection changes, our &lt;code class=&quot;language-text&quot;&gt;Selection&lt;/code&gt; object should have changed as well. To get this behavior, we’re going to use the &lt;code class=&quot;language-text&quot;&gt;onselectionchange&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document/selectionchange_event&quot;&gt;event listener&lt;/a&gt;. This way, we retrieve the &lt;code class=&quot;language-text&quot;&gt;selection.toString()&lt;/code&gt; and set it as &lt;code class=&quot;language-text&quot;&gt;selected&lt;/code&gt; using the &lt;code class=&quot;language-text&quot;&gt;setSelected()&lt;/code&gt; state hook.&lt;/p&gt;
&lt;p&gt;Our final product for a &lt;code class=&quot;language-text&quot;&gt;useSelection&lt;/code&gt; hook then looks something like this:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; useState&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; useEffect &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;react&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;useSelection&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;selected&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setSelected&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// callback function that updates state with current selection&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;handleSelectionChange&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; selection&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;// if browser supports selection API &lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;getSelection&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            selection &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSelection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; selection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;selection&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            selection &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;selection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createRange&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            text &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; selection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;text&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;// update state with selected text and Selection object&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;setSelected&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; text&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; selection &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token function&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; isSubscribed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// whenever selection on page changes, call handleSelectionChange callback&lt;/span&gt;
        document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;onselectionchange&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; isSubscribed &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleSelectionChange&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;// &apos;unsubscribe&apos; from event listener on component dismount&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; isSubscribed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; selected&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now that we have the hook, we can use it in any component to get the &lt;code class=&quot;language-text&quot;&gt;Selection&lt;/code&gt; object and its string value.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; selected &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useSelection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// =&gt; { selection: Selection, text: selected text str }&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Up next&lt;/h2&gt;
&lt;p&gt;In the next post in the series, I’ll detail how we can use this hook to share the selected text using a share-tooltip.&lt;/p&gt;
&lt;!-- TODO: add this to final blog post --&gt;
&lt;!-- It&apos;s easy to fall in love with [Medium&apos;s](www.medium.com) reading experience. They do some incredibly smart text formatting and styling that makes the article easy to read at any screen resolution and size. It&apos;s a shame most people don&apos;t realize the amount of effort that goes into it. Especially since to really get a feel for it you&apos;d have to open up the inspector and take a peek at plethora of custom CSS being used on sometimes even the character level. --&gt;</content:encoded></item><item><title><![CDATA[Bulk un-liking tweets, why it's so hard, and how to do it]]></title><description><![CDATA[In the current intellectual climate, where good-faith discussion over seemingly innocent topics can get impact one’s livelihood, many people…]]></description><link>https://gatsby-starter-blog-demo.netlify.app/why-bulk-twitter-unlike-is-so-hard/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/why-bulk-twitter-unlike-is-so-hard/</guid><pubDate>Sat, 13 Jun 2020 21:24:32 GMT</pubDate><content:encoded>&lt;p&gt;In the current intellectual climate, where good-faith discussion over seemingly innocent topics can get impact one’s livelihood, many people have turned to culling their social media histories. I’ve made a regular practice of this since the Snowden &lt;a href=&quot;https://www.theguardian.com/world/interactive/2013/nov/01/snowden-nsa-files-surveillance-revelations-decoded&quot;&gt;revelations&lt;/a&gt;. But it was &lt;a href=&quot;https://nymag.com/author/andrew-sullivan/&quot;&gt;Andrew Sullivan’s&lt;/a&gt; latest essay that really pushed me to find a way to do this in an efficient, automated fashion.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“We have co-workers eager to weaponize their ideology to purge the workforce. We have employers demanding our attendance at seminars and workshops to teach this ideology. We have journalists (of all people) poring through other writers’ work or records to get them in trouble, demoted, or fired. We have faculty members at colleges signing petitions to rid their departments of those few left not fully onboard. We have human-resources departments that have adopted this ideology whole and are imposing it as a condition for employment. And, critically, we have a Twitter mob to hound people into submission.”&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://nymag.com/intelligencer/2020/06/andrew-sullivan-is-there-still-room-for-debate.html&quot;&gt;Is There Still Room for Debate?&lt;/a&gt; | Andrew Sullivan&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Twitter makes it &lt;a href=&quot;https://www.theverge.com/2018/2/8/16991396/how-to-delete-twitter-history-tweetdelete&quot;&gt;notoriously&lt;/a&gt; difficult to mass-delete old tweets, media, and likes. Unless you’re inclined to hand over control over your account and all it’s history indefinitely to a third-party, there’s really no good way to do this. Which is exactly why I made one.&lt;/p&gt;
&lt;h2&gt;Bulk-un-liking tweets&lt;/h2&gt;
&lt;p&gt;I made &lt;a href=&quot;https://github.com/luqven/likeBuddy&quot;&gt;likeBuddy&lt;/a&gt;, a simple script, in an afternoon out of frustration with how long it was taking me to remove likes from an old account. So lots of room for improvement here, please don’t judge me too harshly.&lt;/p&gt;
&lt;p&gt;The script adds a &lt;code class=&quot;language-text&quot;&gt;likeBuddy.unlike()&lt;/code&gt; function to the browser window. The function accepts one argument, an integer, indicating how many tweets you want to ‘un-like’. You can see some of the sample console output bellow.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;console&quot;&gt;&lt;pre class=&quot;language-console&quot;&gt;&lt;code class=&quot;language-console&quot;&gt;searching for more tweets 🕵️ ...
working... 🔨
4 likes removed 🗑️
--
LikeBuddy deleted likes in: 478ms - timer ended
It found 4 tweets to unlike 💔&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;How it works&lt;/h3&gt;
&lt;p&gt;The script finds the tweets in the viewport with the ‘liked’ attribute. As of this writing, Twitter gives tweets that can be un-liked &lt;code class=&quot;language-text&quot;&gt;div[data-testid=&amp;quot;unlike&amp;quot;]&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; likedTweetAttribute &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;div[data-testid=&quot;unlike&quot;]&apos;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; foundTweets &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelectorAll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;likedTweetAttribute&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;LikeBuddy then simulates a click on each of those tweet’s hearts.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;unlike&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;tweet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;working... 🔨&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    unliked &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; unliked &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;updateProgress&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    tweet&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Until it finally repeats the process as many times as necessary to match the input target number of tweets&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// scroll to begin loading next batch of tweets&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;scrollToBottom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;/** 
 * an interval is established here to avoid:
 * a) being mistaken for a bot, and
 * b) allow for lazy-lading assets to finish rendering
 */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; counter &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; scrollBuffer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    counter&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;counter &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;findAndRemove&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;max&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;clearInterval&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;scrollBuffer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Some closing thoughts&lt;/h2&gt;
&lt;p&gt;It’d be nice if I had the time to build some sort of GUI instead of having the user interact via the console. Not very elegant. Also I’m a little worried about getting tagged as a bot or somehow getting account feature’s limited as a result of bulk-un-liking. But for the immediate future, this likeBuddy script is an easy to bulk-un-like tweets without having to hand over your twitter data or credentials.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Why browser's "auto-fill" features suck and how to fix them]]></title><description><![CDATA[It’s well known that browser’s autofill, or autocomplete, implementations vary. A lot. Not only between browsers but between the desktop and…]]></description><link>https://gatsby-starter-blog-demo.netlify.app/autofill-sucks/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/autofill-sucks/</guid><pubDate>Wed, 10 Jun 2020 22:36:41 GMT</pubDate><content:encoded>&lt;p&gt;It’s well known that browser’s autofill, or autocomplete, implementations vary. A lot. Not only between browsers but between the desktop and mobile versions of browsers. So why do are we still in the situation where some developers still don’t &lt;a href=&quot;https://css-tricks.com/snippets/css/change-autocomplete-styles-webkit-browsers/&quot;&gt;control&lt;/a&gt; for this behavior?&lt;/p&gt;
&lt;p&gt;Maybe they’re just not aware it’s a widespread issue. Maybe most web developer’s are so privacy concerned they’ve disabled the feature. And I suppose that’s excusable, since I have no idea what percentage of browser users actually interact with the auto fill feature. But I want to at least draw attention to this problem.&lt;/p&gt;
&lt;h2&gt;Auto fill isn’t contextually aware&lt;/h2&gt;
&lt;p&gt;Look at the example bellow.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/00g9HI9.png&quot; alt=&quot;auto-filled-form-obscuring-dropdown-options&quot;&gt;&lt;/p&gt;
&lt;iframe height=&quot;300&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;Problem with client autofill and autocomplete&quot; src=&quot;https://codepen.io/luqven/embed/preview/ExPPdGJ?height=300&amp;theme-id=36302&amp;default-tab=js,result&amp;editable=true&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&apos;https://codepen.io/luqven/pen/ExPPdGJ&apos;&gt;Problem with client autofill and autocomplete&lt;/a&gt; by Luis Ball
  (&lt;a href=&apos;https://codepen.io/luqven&apos;&gt;@luqven&lt;/a&gt;) on &lt;a href=&apos;https://codepen.io&apos;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;p&gt;I run into this issue dozens of times a day, where the autofill form is obscuring the dropdown options of the form it’s trying to autofill. Try it out above, you’ll see how frustrating it is - &lt;em&gt;note: on some browsers you need to double click to bring up the auto-fill&lt;/em&gt;.&lt;/p&gt;
&lt;!-- CodePen Embed goes here --&gt;
&lt;p&gt;Now obviously not everyone implements dropdowns in this way. And we do often use the same information for things like address field, hence why autofill exists. But, at least in my experience, I find the feature obstructs as much as it helps.&lt;/p&gt;
&lt;h2&gt;How we can fix this&lt;/h2&gt;
&lt;p&gt;Thankfully, there is a way to &lt;a href=&quot;&quot;&gt;style&lt;/a&gt; the built-in auto fill functionality somewhat. But the “fix” I’d like to see is for browser developers to add a dismiss feature. And I know the &lt;code class=&quot;language-text&quot;&gt;Esc&lt;/code&gt; key works in some, but frankly that’s neither guaranteed nor foolproof, given in some contexts that can also dismiss a modal unintentionally. &lt;/p&gt;
&lt;p&gt;We’d all be frankly better off if they’d just add a small &lt;code class=&quot;language-text&quot;&gt;dismiss&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;X&lt;/code&gt; to the autofill modal. For now, I’ll have to make do with just disabling the darned thing.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[The problem with snack bars for managing notifications]]></title><description><![CDATA[Snack bars, also known as toasts, are popular. But they’re almost always absolutely positioned, obscuring content in unexpected and annoying…]]></description><link>https://gatsby-starter-blog-demo.netlify.app/the-problem-with-snack-bars/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/the-problem-with-snack-bars/</guid><pubDate>Tue, 09 Jun 2020 19:07:26 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://material-ui.com/components/snackbars/&quot;&gt;Snack bars&lt;/a&gt;, also known as toasts, are popular. But they’re almost always absolutely positioned, obscuring content in unexpected and annoying ways.&lt;/p&gt;
&lt;p&gt;Take LinkedIn. It’s snackbar does not have a timeout. Moreover, they stack and unlimited number of times. This Makes for a very annoying job application process on the site.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/cNo1duH.png&quot; alt=&quot;linked-in-snackbar&quot;&gt;&lt;/p&gt;
&lt;p&gt;We can do better, and some already do.&lt;/p&gt;
&lt;p&gt;GitHub’s notifications view is an excellent example. They make it easy to know when there’s something new, and easy to manage old notifications. &lt;/p&gt;
&lt;!-- ![github-notifications-bell](https://i.imgur.com/2DVxA7I.png) --&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/44dtJXj.png&quot; alt=&quot;github-notifications-manager&quot;&gt;&lt;/p&gt;
&lt;p&gt;So use snack bars sparingly, if you must use them at all. They can easily overwhelm your users and cause unintended frustration.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[How to publish a Gatsby site to GitHub Pages]]></title><description><![CDATA[I was recently updating my personal site whe all of a sudden I realized I’d managed to publish the repo’s  as the homepage. After a brief…]]></description><link>https://gatsby-starter-blog-demo.netlify.app/gatsby-gh-pages/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/gatsby-gh-pages/</guid><pubDate>Tue, 09 Jun 2020 07:00:25 GMT</pubDate><content:encoded>&lt;p&gt;I was recently updating my personal site whe all of a sudden I realized I’d managed to publish the repo’s &lt;code class=&quot;language-text&quot;&gt;README.md&lt;/code&gt; as the homepage. After a brief moment of panic, I remembered I’d recently transitioned over to using &lt;a href=&quot;https://github.com/tschaub/gh-pages&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;gh-pages&lt;/code&gt;&lt;/a&gt; package to manage my deploys.&lt;/p&gt;
&lt;p&gt;As it turns out, the suggested &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; deploy script in that package’s readme&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&quot;deploy&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby build &amp;amp;&amp;amp; gh-pages -d public -b master&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;doesn’t account for people to publish GitHub pages to custom domains. Therefore, every deploy would erase the &lt;code class=&quot;language-text&quot;&gt;CNAME&lt;/code&gt; file in the root directory since this is not automatically created by the &lt;code class=&quot;language-text&quot;&gt;gastby build&lt;/code&gt; script.&lt;/p&gt;
&lt;p&gt;Solution? Just adding &lt;code class=&quot;language-text&quot;&gt;cp CNAME public&lt;/code&gt; to the &lt;code class=&quot;language-text&quot;&gt;deploy command&lt;/code&gt; ensures we don’t delete the existing &lt;code class=&quot;language-text&quot;&gt;CNAME&lt;/code&gt; file on deploy. So our &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; scripts would end up looking something like:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token string&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&quot;deploy&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby build &amp;amp;&amp;amp; cp CNAME public &amp;amp;&amp;amp; gh-pages -d public -b master&quot;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[How to make a cross-browser, blurred-glass menu bar]]></title><description><![CDATA[The goal is to recreate the apple.com menubar. They do some fancy blur effects that are not supported in FireFox at the moment. safari-vs…]]></description><link>https://gatsby-starter-blog-demo.netlify.app/corss-browser-glass-navbar/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/corss-browser-glass-navbar/</guid><pubDate>Mon, 08 Jun 2020 07:00:25 GMT</pubDate><content:encoded>&lt;p&gt;The goal is to recreate the &lt;a href=&quot;www.apple.com&quot;&gt;apple.com&lt;/a&gt; menubar. They do some fancy blur effects that are not supported in FireFox at the moment.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/f1bFaBu.png&quot; alt=&quot;safari-vs-firefox-blur-glass-menubar&quot;&gt;&lt;/p&gt;
&lt;p&gt;As you can see in the image above, non-WebKit browsers like Firefox don’t support the &lt;code class=&quot;language-text&quot;&gt;backdrop-filter&lt;/code&gt; CSS property as of right now. In order to achieve something like the cross-browser compatible example bellow, we therefore have to do some CSS and Js tricker.&lt;/p&gt;
&lt;h2&gt;Cross-browser compatible example&lt;/h2&gt;
&lt;iframe height=&quot;399&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; title=&quot;YzwwzWV&quot; src=&quot;https://codepen.io/luqven/embed/YzwwzWV?height=399&amp;theme-id=dark&amp;default-tab=css,result&amp;editable=true&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;true&quot;&gt;
  See the Pen &lt;a href=&apos;https://codepen.io/luqven/pen/YzwwzWV&apos;&gt;YzwwzWV&lt;/a&gt; by Luis Ball
  (&lt;a href=&apos;https://codepen.io/luqven&apos;&gt;@luqven&lt;/a&gt;) on &lt;a href=&apos;https://codepen.io&apos;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;h2&gt;Blurred-glass menu bar in WebKit Browsers&lt;/h2&gt;
&lt;p&gt;Achieving this effect in a webkit browser is fairly simple. We just need to add a css class to the navigation bar with a &lt;code class=&quot;language-text&quot;&gt;backdrop-filter&lt;/code&gt; property:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;    &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@supports&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;backdrop-filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;blur&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;12px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token selector&quot;&gt;.blurred&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;backdrop-filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;saturate&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;180 %&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;blur&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;13px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token selector&quot;&gt;.nav&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; #5d5d5dc2&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Where it gets tricky is implementing the same effect on the menu bar in browsers without support for &lt;code class=&quot;language-text&quot;&gt;backdrop-filter&lt;/code&gt;. So to re-create the translucency, you have to get a little creative.&lt;/p&gt;
&lt;h2&gt;Blur effects in non-webkit browsers&lt;/h2&gt;
&lt;p&gt;First off, creating a &lt;code class=&quot;language-text&quot;&gt;blurred-glass&lt;/code&gt; filter in FireFox requires us to use a &lt;code class=&quot;language-text&quot;&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; element trick. Essentially, a semi-transparent &lt;code class=&quot;language-text&quot;&gt;&amp;lt;svg /&amp;gt;&lt;/code&gt; with a &lt;code class=&quot;language-text&quot;&gt;&amp;lt;feGaussianBlur /&amp;gt;&lt;/code&gt; property is placed somewhere on the page.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;jsx&quot;&gt;&lt;pre class=&quot;language-jsx&quot;&gt;&lt;code class=&quot;language-jsx&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;// svg element with blur filter applied&lt;/span&gt;
    &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;svg&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;svg-image-blur&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;filter&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;blur-effect&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;feGaussianBlur&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;stdDeviation&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;10&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;/&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token plain-text&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;svg&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, its id gets referenced in the CSS as a &lt;code class=&quot;language-text&quot;&gt;filter&lt;/code&gt; for the element that’s being blurred.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;/* css property referencing that element as the filter */&lt;/span&gt;
    &lt;span class=&quot;token selector&quot;&gt;.blurred-content&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        ...
        &lt;span class=&quot;token property&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;#blur-effect&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It’s quite common to see this trick in used in the wild for projects like lazy image loader libraries that blur an image while it’s loading. The effect is often achieved is often by:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;duplicating an element on-top of the original&lt;/li&gt;
&lt;li&gt;blurring the duplicate&lt;/li&gt;
&lt;li&gt;lowering the opacity of the duplicate&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Generally, this approach works well for static elements whose background and / or image attributes won’t be changing anytime soon. But what about our menu bar?&lt;/p&gt;
&lt;h2&gt;Re-creating &lt;code class=&quot;language-text&quot;&gt;backdrop-filer&lt;/code&gt; effects to achieve blurring&lt;/h2&gt;
&lt;p&gt;A menu bar only blurs what’s scrolled beneath it, making it difficult to know for sure what content will end up needing the effect. What’s more, the content of the page varies unpredictably in size, color, and scale.&lt;/p&gt;
&lt;p&gt;Web-kit browsers solved this problem by introducing the &lt;code class=&quot;language-text&quot;&gt;backdrop-filter&lt;/code&gt; CSS property. It essentially mimics the behavior outlined above, where the entire content of the DOM element’s siblings and children are duplicated and then blurred. FireFox doesn’t support &lt;code class=&quot;language-text&quot;&gt;backdrop-filter&lt;/code&gt; as of right now, and yet, it turns out the approach is very similar.&lt;/p&gt;
&lt;p&gt;To re-create the webkit &lt;code class=&quot;language-text&quot;&gt;backdrop-filter&lt;/code&gt; filter property in FireFox, what we do is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;duplicate the entire site’s content (excluding the menu bar of course)&lt;/li&gt;
&lt;li&gt;blur the container using the svg filter trick outlined above&lt;/li&gt;
&lt;li&gt;place it in a container element and&lt;/li&gt;
&lt;li&gt;put that container inside the navbar’s container.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;// select the html element we want to blur&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; blurTarget &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.blur-target&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// duplicate it&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; duplicate &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; blurTarget&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;cloneNode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// place it inside a container-div&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; targetBlurred &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;div&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// apply blurring svg effect to the container&lt;/span&gt;
    targetBlurred&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;className &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;blurred-content&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// place duplicate inside the container&lt;/span&gt;
    targetBlurred&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;duplicate&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// place our blurred duplicate inside the nav bar&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; navContainer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.nav-container&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    navContainer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;targetBlurred&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, we set the blurred copy’s &lt;code class=&quot;language-text&quot;&gt;z-index&lt;/code&gt; bellow that of the menubar. Note that in order to avoid blurring the contents outside the menu bar, its container needs to have the &lt;code class=&quot;language-text&quot;&gt;overflow: hiddenproperty&lt;/code&gt; set.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;css&quot;&gt;&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;    &lt;span class=&quot;token selector&quot;&gt;// navbar container element
    .nav-container&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; fixed&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 100vw&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;box-shadow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;0 1px 0 &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0 1px 2px &lt;span class=&quot;token function&quot;&gt;rgba&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; .1&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 2&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token property&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; hidden&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    // apply non-web-kit styling if backdrop-filter not supported
    &lt;span class=&quot;token atrule&quot;&gt;&lt;span class=&quot;token rule&quot;&gt;@supports&lt;/span&gt; not &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;backdrop-filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;blur&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;12px&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        // duplicate&lt;span class=&quot;token selector&quot;&gt;&apos;s container
        .blurred-content&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;0 1rem&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;padding-top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 20px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; absolute&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token url&quot;&gt;&lt;span class=&quot;token function&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;#blur-effect&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 0.3&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 3&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token property&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 50px&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;There’s a catch however. The blurred copy of the page doesn’t scroll when the page does out-of-the-box. We have to do some JavaScript trickery to get the blurred copy to scroll at the same speed and maintain the illusion of the transparency effect.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;    &lt;span class=&quot;token comment&quot;&gt;// whenever out page content scrolls, move tbe duplicate&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; contentWrapper &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;#content&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    window&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;scroll&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        duplicate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;style&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;marginTop &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;scrollY &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;px&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;In short, it’s not pretty. In fact it can also significantly reduce the scrolling frame-rates, especially for longer and more complex pages. And, while there are some approaches out there that address this by inserting the blurred duplicate in an &lt;code class=&quot;language-text&quot;&gt;&amp;lt;iframe /&amp;gt;&lt;/code&gt; for instance, the fact is that things shouldn’t be this hard.&lt;/p&gt;
&lt;p&gt;And if you’re thinking, &lt;em&gt;“This sounds like we’ve essentially duplicated the steps outlined in the &lt;code class=&quot;language-text&quot;&gt;backdrop-filter&lt;/code&gt; specs”&lt;/em&gt;, you’re absolutely right. Unlike the spec, however, we can’t &lt;em&gt;“Copy the Backdrop Root Image into a temporary buffer”&lt;/em&gt;. We don’t have access to that buffer, which is why we have to copy the actual HTML DOM elements in full, place them in a container, and then blur them all in unison by blurring the container.&lt;/p&gt;
&lt;p&gt;Thankfully, it looks like most modern browsers are embracing the webkit &lt;code class=&quot;language-text&quot;&gt;backdrop-filter&lt;/code&gt; css property. Chrome starting supporting it since version 81 and FireFox is said to be supporting it within the next major release or two.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Updated on 2020-06-09 | 17:52&lt;/p&gt;
&lt;/blockquote&gt;</content:encoded></item><item><title><![CDATA[About me]]></title><description><![CDATA[Dad 🍼‎‎‏‏‎ ‎ Pittsburgh sports fanatic 🏴‍☠️ @imgix SDK Engineer A little about me I love ideating and engineering user experiences. I went…]]></description><link>https://gatsby-starter-blog-demo.netlify.app/intro/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/intro/</guid><pubDate>Sun, 07 Jun 2020 07:00:25 GMT</pubDate><content:encoded>&lt;h2 style=&quot;font-size: 2rem ;border-bottom: none&quot;&gt;Software Engineer&lt;/h2&gt;
&lt;p&gt;Dad 🍼‎‎‏‏‎ ‎ Pittsburgh sports fanatic 🏴‍☠️&lt;/p&gt;
&lt;p&gt;@&lt;a href=&quot;https://www.imgix.com/&quot;&gt;imgix&lt;/a&gt; SDK Engineer&lt;/p&gt;
&lt;div style=&quot;margin-bottom: 50px&quot;&gt;&lt;/div&gt;
&lt;h2&gt;A little about me&lt;/h2&gt;
&lt;p&gt;I love ideating and engineering user experiences. I went into &lt;strong&gt;software development&lt;/strong&gt; for it’s combination of design thinking and problem solving.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ex @&lt;a href=&quot;https://www.envizzo.com&quot;&gt;Envizzo&lt;/a&gt;, @&lt;a href=&quot;https://www.adelaidelift.com&quot;&gt;Parsec Media&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cmu.edu/&quot;&gt;Carnegie Mellon University&lt;/a&gt; alum.&lt;/p&gt;</content:encoded></item></channel></rss>